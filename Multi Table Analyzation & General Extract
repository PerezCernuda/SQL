
/* Looking at a database of 11 tables:
  - Employees table stores employees data such as employee id, last name, first name, etc. It also has a field named ReportsTo to specify who reports to whom.
  - Customers table stores customers data. The line between employees. Employeeid and customers. SupportRepID shows how the two tables are related (ie, how you would JOIN them).
  - The invoices table stores invoice header data (Customer ID, Billing Address, etc) and the invoice_items table stores the invoice line items data (Unit Price, Quantity).
  - Artists table stores artists data.
  - Albums table stores data about a list of tracks. Each album belongs to one artist. However, one artist may have multiple albums.
  - Media_types table stores media types such as MPEG audio and AAC audio files.
  - Genres table stores music types such as rock, jazz, metal, etc.
  - Tracks table stores the data of songs. Each track belongs to one album.
  - Playlists table store data about playlists. Each playlist contains a list of tracks. Each track may belong to multiple playlists. The relationship between the playlists
    table and tracks table is many-to-many. The playlist_track table is used to reflect this relationship. 
Let's get to work! */


/* Before getting into general questions below, I want to analyze the sales based on the countries, sales rep, and genre. 
This is so I can get an idea of what is selling right now and where to see if it has influence on future sales. */

-- Which countries orders requested from, how mnay orders in each country, and the total spending per country
SELECT i.BillingCountry, COUNT(i.InvoiceId) AS "Total Orders", SUM(ii.Quantity) AS "Total Items Sold",
       ROUND(SUM(i.Total),2) AS "Total Amount Sold"
FROM invoices i
INNER JOIN invoice_items ii
    ON i.InvoiceId = ii.InvoiceId
GROUP BY BillingCountry
ORDER BY SUM(Total) DESC;

-- Total Sales for each sales agent
SELECT e.LastName, e.FirstName, e.Title, e.Country, COUNT(DISTINCT i.InvoiceId) AS "Total Sales Orders",
       SUM(ii.Quantity) AS "Total Items Sold", ROUND(SUM(i.Total),2) AS "Total Amount Sold"
FROM invoices i
LEFT JOIN customers c
    ON i.CustomerId = c.CustomerId
LEFT JOIN employees e 
    ON c.SupportRepId = e.EmployeeId
LEFT JOIN invoice_items ii
    ON i.InvoiceId = ii.InvoiceId
GROUP BY e.EmployeeID
ORDER BY COUNT(i.InvoiceId) DESC;

-- Total count of item purchases by Genre
SELECT g.Name, COUNT(i.InvoiceId) AS "Total Sales"
FROM invoices i 
INNER JOIN invoice_items ii
    ON i.InvoiceId = ii.InvoiceId
INNER JOIN tracks t
    ON ii.TrackId = t.TrackId
INNER JOIN genres g
    ON t.GenreId = g.GenreId
GROUP BY g.Name
ORDER BY COUNT(i.InvoiceId) DESC;


-- Setting up temporary tables to use for the next few data analysis
WITH top_countries AS
    (SELECT i.BillingCountry, COUNT(*) AS total_sales, ROUND(SUM(Total),2) AS total_amount_sold
    FROM invoices i
    GROUP BY i.BillingCountry
    ORDER BY SUM(i.Total) DESC
    LIMIT 4),
    
top_genres AS 
    (SELECT g.Name, COUNT(i.InvoiceId) AS total_sales
    FROM invoices i 
    INNER JOIN invoice_items ii
         ON i.InvoiceId = ii.InvoiceId
    INNER JOIN tracks t
         ON ii.TrackId = t.TrackId
    INNER JOIN genres g
         ON t.GenreId = g.GenreId
    GROUP BY g.Name
    ORDER BY COUNT(i.InvoiceId) DESC
    LIMIT 4)
 
-- How many sales in the top countries of all top genres
SELECT i.BillingCountry AS Country, COUNT(ii.InvoiceId) AS "Total Sales in Top Genres"
FROM invoices i 
RIGHT JOIN top_countries tc
    ON i.BillingCountry = tc.BillingCountry
INNER JOIN invoice_items ii
    ON i.InvoiceId = ii.InvoiceId
INNER JOIN tracks t
    ON ii.TrackId = t.TrackId
INNER JOIN genres g
    ON t.GenreId = g.GenreId
RIGHT JOIN top_genres tg
    ON g.Name = tg.Name
GROUP BY i.BillingCountry
ORDER BY tc.total_amount_sold DESC;

-- How many sales in the top countries in each of the top genres
SELECT i.BillingCountry AS Country, g.Name Genre, COUNT(ii.InvoiceId) AS "Total Sales"
FROM invoices i 
RIGHT JOIN top_countries tc
    ON i.BillingCountry = tc.BillingCountry
INNER JOIN invoice_items ii
    ON i.InvoiceId = ii.InvoiceId
INNER JOIN tracks t
    ON ii.TrackId = t.TrackId
INNER JOIN genres g
    ON t.GenreId = g.GenreId
RIGHT JOIN top_genres tg
    ON g.Name = tg.Name
GROUP BY i.BillingCountry, g.Name
ORDER BY tc.total_amount_sold DESC, tg.total_sales DESC; 

-- How many sales in NON top genres for top countries
SELECT i.BillingCountry AS Country, COUNT(ii.InvoiceId) AS "Total Sales in NON Top Genres"
FROM invoices i 
LEFT JOIN top_countries tc
    ON i.BillingCountry = tc.BillingCountry
INNER JOIN invoice_items ii
    ON i.InvoiceId = ii.InvoiceId
INNER JOIN tracks t
    ON ii.TrackId = t.TrackId
INNER JOIN genres g
    ON t.GenreId = g.GenreId
WHERE i.BillingCountry IN (tc.BillingCountry)
      AND g.Name NOT IN (SELECT Name FROM top_genres)
GROUP BY i.BillingCountry
ORDER BY tc.total_amount_sold DESC;


/* Now for just general, straight to the point, questions that might be requested by a department. */
-- Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT c.CustomerID AS "Customer ID", (c.FirstName || " " || c.LastName) AS "Full Name", c.Country
FROM customers c
WHERE Country <> "USA";

-- Show only the Customers from Brazil.
SELECT *
FROM customers c
WHERE Country = "Brazil";

-- Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT (c.FirstName || " " ||c.LastName) AS "Full Name", I.InvoiceId AS "Invoice ID", i.InvoiceDate AS "Date of Invoice", i.BillingCountry AS "Billing Country"
FROM customers c
LEFT JOIN invoices i
    ON c.CustomerId = i.CustomerId
WHERE c.Country = "Brazil";

-- Show the Employees who are Sales Agents.
SELECT * 
FROM employees e 
WHERE e.Title LIKE ("%Sales%");

-- Find a list of billing countries.
SELECT DISTINCT BillingCountry
FROM invoices;

-- Show the invoices associated with each sales agent.
SELECT e.FirstName AS "Agent First Name", e.LastName AS "Agent Last Name", 
       i.InvoiceId AS "Invoice ID", (c.FirstName || " " || c.LastName) AS Customer
FROM employees e
LEFT JOIN customers c
    ON e.EmployeeId = c.SupportRepId
LEFT JOIN invoices i
    ON c.CustomerId = i.CustomerId
WHERE e.Title LIKE ("%Sales%") AND e.Title LIKE ("%Agent%");

-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT i.Total AS "Invoice Total", (c.FirstName || " " || c.LastName) AS "Customer Name", c.Country, 
       (e.FirstName || " " || e.Lastname) AS "Sales Agent Name"
FROM invoices i
LEFT JOIN customers c
    ON i.CustomerId = c.CustomerId
LEFT JOIN employees e
    ON c.SupportRepId = e.EmployeeId
    
-- How many Invoices were there in 2009?
SELECT COUNT(*) AS "Total Invoices"
FROM invoices i
WHERE SUBSTRING(i.InvoiceDate, 1, 4) = "2009"; 

-- What are the total sales for 2009?
SELECT ROUND(SUM(i.Total), 2) AS "Total Invoices"
FROM invoices i
WHERE SUBSTRING(i.InvoiceDate, 1, 4) = "2009"; 

-- Write a query that includes the purchased track name with each invoice line ID.
SELECT ii.InvoiceLineId AS "Invoice Line ID", t.Name AS "Track Name"
FROM invoice_items ii
LEFT JOIN tracks t
    ON ii.TrackId = t.TrackId
    
-- Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT ii.InvoiceLineId AS "Invoice Line ID",
       t.Name AS "Track Name", ar.Name AS "Artist Name"
FROM invoice_items ii
LEFT JOIN tracks t
    ON ii.TrackId = t.TrackId
INNER JOIN albums al
    ON t.AlbumId = al.AlbumId
INNER JOIN artists ar
    ON al.ArtistId = ar.ArtistId
    
-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS "Track Name", a.Title AS "Album Title",
       mt.Name AS "Media Type", g.Name AS "Genre"
FROM tracks t
INNER JOIN albums a
    ON t.AlbumId = a.AlbumId
INNER JOIN media_types mt
    ON t.MediaTypeId = mt.MediaTypeId
INNER JOIN genres g
    ON t.GenreId = g.GenreId
    
-- Which sales agent made the most dollars in sales in 2009?
SELECT (e.FirstName || " " || e.LastName) AS "Sales Agent", ROUND(SUM(i.Total), 2) AS "Total Amount in Sales"
FROM invoices i
INNER JOIN customers c
    ON i.CustomerId = c.CustomerId
INNER JOIN employees e
    ON c.SupportRepId = e.EmployeeId
WHERE SUBSTRING(i.InvoiceDate, 1, 4) = "2009"
      AND e.Title LIKE ("%Sales%") 
      AND e.Title LIKE ("%Agent%")
GROUP BY e.EmployeeId
ORDER BY SUM(i.Total) DESC; 
    


