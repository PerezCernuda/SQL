
USE astronauts;

/* The National Aeronautics and Space Administration (NASA) selected the first group of astronauts in 1959. From 500 candidates with the required jet
aircraft flight experience and engineering training in addition to a height below 5 feet 11 inches. The second and third groups chosen included civilians
with extensive flying experience. By 1964, requirements had changed, and emphasis was placed on academic qualifications; in 1965, six scientist astronauts
were selected from a group of 400 applicants who had a doctorate or equivalent experience in the natural sciences, medicine, or engineering.
[SOURCE: https://www.kaggle.com/nasa/astronaut-yearbook] */

-- Comparing military/academics along with space flight and walk, sessions and hours, for each group since requirements shifted more towards academics as time passed
SELECT a.GroupNum AS "Group", COUNT(*) AS "Total Members", COUNT(a.Military_Rank) AS "Military Experience", agrads.academic_astronauts AS "Academic Graduates",
SUM(a.Space_Flights) AS "Total Space Flights", ROUND(AVG(a.Space_Flights),2) AS "Average Space Flights /Person", SUM(a.Space_Flight_hr) AS "Total Flight Hours",
ROUND(AVG(a.Space_Flight_hr),2) AS "Average Flight Hours /Person", SUM(a.Space_Walks) AS "Total Space Walks", ROUND(AVG(a.Space_Walks),2) AS "Average Space Walks /Person",
SUM(a.Space_Walks_hr) AS "Total Walk Hours", ROUND(AVG(a.Space_Walks_hr),2) AS "Average Walk Hours /Person"
FROM astronauts a
INNER JOIN 
    (SELECT agrads.GroupNum, COUNT(*) AS academic_astronauts
    FROM astronauts agrads
    WHERE (agrads.Graduate_Major LIKE "%Engineer%"
	  OR agrads.Graduate_Major LIKE "%Aero%"
          OR agrads.Graduate_Major LIKE "%Astro%"
          OR agrads.Graduate_Major LIKE "%Aviation%"
          OR agrads.Graduate_Major LIKE "%Flight%")
	  GROUP BY agrads.GroupNum
    ORDER BY agrads.GroupNum) AS agrads 
    ON a.GroupNum = agrads.GroupNum
GROUP BY a.GroupNum
ORDER BY a.GroupNum;


-- Since entrance was based on academics as time passed, finding what Alma Mater brought in more astronauts
SELECT aalma.Alma_Mater, COUNT(*) AS atronauts_attended
FROM astronauts aalma
GROUP BY aalma.Alma_Mater
HAVING COUNT(*) > 4
ORDER BY COUNT(*) DESC;

-- Then finding military and academic information about individuals attending those Alma Maters
SELECT a.GroupNum, a.Alma_Mater, a.Undergraduate_Major, a.Graduate_Major, 
	CASE WHEN a.Military_Rank IS NOT NULL THEN "Yes"
	ELSE "No"
	END AS "Military Experience"
FROM astronauts a
INNER JOIN 
	(SELECT aalma.Alma_Mater, COUNT(*) AS astronauts_attended
	FROM astronauts aalma
	GROUP BY aalma.Alma_Mater
	HAVING COUNT(*) > 4
	ORDER BY COUNT(*) DESC) AS aalma 
    	ON a.Alma_Mater = aalma.Alma_Mater
ORDER BY a.GroupNum ASC;

-- Finding the most studied undergraduate majors for the astronauts brought in
SELECT a.Undergraduate_Major AS "Undergraduate Major", COUNT(*) AS "Total Astronauts"
FROM astronauts a
WHERE a.Undergraduate_Major IS NOT NULL
GROUP BY a.Undergraduate_Major
HAVING COUNT(*) > 4
ORDER BY COUNT(*) DESC;

-- Finding the most studied graduate majors for the astronauts brought in
SELECT a.Graduate_Major AS "Graduate Major", COUNT(*) AS "Total Astronauts"
FROM astronauts a
WHERE a.Graduate_Major IS NOT NULL
GROUP BY a.Graduate_Major
HAVING COUNT(*) > 4
ORDER BY COUNT(*) DESC;

-- Finding how many astronauts brought in served in military
SELECT "Served" AS "Military Activity", COUNT(*) AS "Total Astronauts"
FROM astronauts mact
WHERE mact.Military_Rank IS NOT NULL
UNION ALL
SELECT "Never Served" AS "Military Activity", COUNT(*) AS "Total Astronauts"
FROM astronauts mina
WHERE mina.Military_Rank IS NULL;

-- Quick find to see the military ranks astronauts achieved
SELECT a.Military_Rank AS "Military Rank", COUNT(*) AS "Total Astronauts"
FROM astronauts a
WHERE a.Military_Rank IS NOT NULL
GROUP BY a.Military_Rank
ORDER BY COUNT(*) DESC;

-- Quick find to see the different military branches astronauts were in
SELECT a.Military_Branch AS "Military Branch", COUNT(*) AS "Total Astronauts"
FROM astronauts a
WHERE a.Military_Branch IS NOT NULL
GROUP BY a.Military_Branch
ORDER BY COUNT(*) DESC;


/* Looking for links to any other possibilities such as age, flights, walks, or group */

-- What age group most astronauts fall under when accepted
SELECT "18-25" AS "Age Group When Accepted", COUNT(*) AS "Total Astronauts"
FROM astronauts a1825
WHERE ABS(a1825.Year - RIGHT(a1825.Birth_Date,4)) BETWEEN 18 AND 25
UNION ALL
SELECT "26-35" AS "Age Group When Accepted", COUNT(*) AS "Total Astronauts"
FROM astronauts a1825
WHERE ABS(a1825.Year - RIGHT(a1825.Birth_Date,4)) BETWEEN 26 AND 35
UNION ALL
SELECT "36-45" AS "Age Group When Accepted", COUNT(*) AS "Total Astronauts"
FROM astronauts a1825
WHERE ABS(a1825.Year - RIGHT(a1825.Birth_Date,4)) BETWEEN 36 AND 45
UNION ALL
SELECT "46-55" AS "Age Group When Accepted", COUNT(*) AS "Total Astronauts"
FROM astronauts a1825
WHERE ABS(a1825.Year - RIGHT(a1825.Birth_Date,4)) BETWEEN 46 AND 55;

-- Obtaining more information about those few outliers in age
SELECT a.GroupNum AS "Group", ABS(a.Year - RIGHT(a.Birth_Date,4)) AS "Age At Acceptance", a.Alma_Mater AS "Alma Mater",
a.Undergraduate_Major AS "Undergraduate Major", a.Graduate_Major AS "Graduate Major", a.Military_Rank AS "Military Rank",
a.Military_Branch AS "Military Branch", a.Space_Flights "Space Flights", a.Space_Flight_hr AS "Flight Hours",
a.Space_Walks AS "Space Walks", a.Space_Walks_hr AS "Space Walk Hours"
FROM astronauts a
WHERE (ABS(a.Year - RIGHT(a.Birth_Date,4)) IS NOT NULL) AND 
      (ABS(a.Year - RIGHT(a.Birth_Date,4)) NOT BETWEEN 26 AND 45)
ORDER BY a.GroupNum;
